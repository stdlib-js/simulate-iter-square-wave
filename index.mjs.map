{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isEven = require( '@stdlib/math-base-assert-is-even' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {PositiveInteger} [options.period] - number of iterations before a square wave repeats\n* @param {number} [options.min] - minimum amplitude\n* @param {number} [options.max] - maximum amplitude\n* @param {integer} [options.offset] - phase offset (in units of iterations)\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'iter': 100\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'period' ) ) {\n\t\topts.period = options.period;\n\t\tif ( !isPositiveInteger( options.period ) || !isEven( options.period ) ) { // eslint-disable-line max-len\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an positive even integer. Option: `%s`.', 'period', options.period ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'min' ) ) {\n\t\topts.min = options.min;\n\t\tif ( !isNumber( options.min ) || isnan( options.min ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'min', options.min ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'max' ) ) {\n\t\topts.max = options.max;\n\t\tif ( !isNumber( options.max ) || isnan( options.max ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'max', options.max ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'offset' ) ) {\n\t\topts.offset = options.offset;\n\t\tif ( !isInteger( options.offset ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be an integer. Option: `%s`.', 'offset', options.offset ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\topts.iter = options.iter;\n\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which generates a square wave.\n*\n* @param {Options} [options] - function options\n* @param {PositiveInteger} [options.period=10] - number of iterations before a square wave repeats (this must be a positive even integer)\n* @param {number} [options.min=-1.0] - minimum amplitude\n* @param {number} [options.max=1.0] - maximum amplitude\n* @param {integer} [options.offset=0] - phase offset (in units of iterations; zero-based)\n* @param {NonNegativeInteger} [options.iter=1e308] - number of iterations\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Iterator} iterator\n*\n* @example\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSquareWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns -1.0\n*\n* // ...\n*/\nfunction iterSquareWave( options ) {\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar err;\n\tvar t;\n\tvar h;\n\tvar i;\n\n\topts = {\n\t\t'period': 10,\n\t\t'min': -1.0,\n\t\t'max': 1.0,\n\t\t'offset': 0,\n\t\t'iter': 1e308\n\t};\n\tif ( arguments.length ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tt = ( opts.period-opts.offset ) % opts.period;\n\tif ( t < 0 ) {\n\t\tt += opts.period;\n\t}\n\tt -= 1;\n\th = opts.period / 2;\n\ti = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i > opts.iter ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tt += 1;\n\t\treturn {\n\t\t\t'value': ( (t%opts.period) < h ) ? opts.max : opts.min,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterSquareWave( opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = iterSquareWave;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which generates a square wave.\n*\n* @module @stdlib/simulate-iter-square-wave\n*\n* @example\n* var iterSquareWave = require( '@stdlib/simulate-iter-square-wave' );\n*\n* var opts = {\n*     'period': 4\n* };\n*\n* var iter = iterSquareWave( opts );\n*\n* var v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns 1.0\n*\n* v = iter.next().value;\n* // returns -1.0\n*\n* // ...\n*/\n\n// MODULES //\n\nvar iterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = iterator;\n"],"names":["isPlainObject","require$$0","hasOwnProp","require$$1","isNumber","require$$2","isPrimitive","isInteger","require$$3","isPositiveInteger","require$$4","isNonNegativeInteger","require$$5","isEven","require$$6","isnan","require$$7","format","require$$8","setReadOnly","iteratorSymbol","validate","opts","options","period","min","TypeError","max","offset","iter","main","iterSquareWave","FLG","err","t","h","i","arguments","length","next","end","factory","done","value","lib"],"mappings":";;y+BAsBA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAWC,EAAsCC,YACjDC,EAAYC,EAAuCF,YACnDG,EAAoBC,EAAgDJ,YACpEK,EAAuBC,EAAmDN,YAC1EO,EAASC,EACTC,EAAQC,EACRC,EAASC,EAoEb,IC5EIC,EAAclB,EACdmB,EAAiBjB,EACjBkB,EDkCJ,SAAmBC,EAAMC,GACxB,OAAMvB,EAAeuB,IAGhBrB,EAAYqB,EAAS,YACzBD,EAAKE,OAASD,EAAQC,OAChBf,EAAmBc,EAAQC,SAAaX,EAAQU,EAAQC,SAI1DtB,EAAYqB,EAAS,SACzBD,EAAKG,IAAMF,EAAQE,KACbrB,EAAUmB,EAAQE,MAASV,EAAOQ,EAAQE,MACxC,IAAIC,UAAWT,EAAQ,8DAA+D,MAAOM,EAAQE,MAGzGvB,EAAYqB,EAAS,SACzBD,EAAKK,IAAMJ,EAAQI,KACbvB,EAAUmB,EAAQI,MAASZ,EAAOQ,EAAQI,MACxC,IAAID,UAAWT,EAAQ,8DAA+D,MAAOM,EAAQI,MAGzGzB,EAAYqB,EAAS,YACzBD,EAAKM,OAASL,EAAQK,QAChBrB,EAAWgB,EAAQK,SACjB,IAAIF,UAAWT,EAAQ,gEAAiE,SAAUM,EAAQK,SAG9G1B,EAAYqB,EAAS,UACzBD,EAAKO,KAAON,EAAQM,MACdlB,EAAsBY,EAAQM,OAC5B,IAAIH,UAAWT,EAAQ,2EAA4E,OAAQM,EAAQM,OAGrH,KA3BE,IAAIH,UAAWT,EAAQ,8EAA+E,SAAUM,EAAQC,SALzH,IAAIE,UAAWT,EAAQ,qEAAsEM,KC+FtG,IAAAO,EA/FA,SAASC,EAAgBR,GACxB,IAAID,EACAO,EACAG,EACAC,EACAC,EACAC,EACAC,EASJ,GAPAd,EAAO,CACNE,OAAU,GACVC,KAAQ,EACRE,IAAO,EACPC,OAAU,EACVC,KAAQ,OAEJQ,UAAUC,SACdL,EAAMZ,EAAUC,EAAMC,IAErB,MAAMU,EAoBR,OAjBAC,GAAMZ,EAAKE,OAAOF,EAAKM,QAAWN,EAAKE,QAC9B,IACRU,GAAKZ,EAAKE,QAEXU,GAAK,EACLC,EAAIb,EAAKE,OAAS,EAClBY,EAAI,EAIJjB,EADAU,EAAO,GACY,OAAQU,GAC3BpB,EAAaU,EAAM,SAAUW,GAGxBpB,GACJD,EAAaU,EAAMT,EAAgBqB,GAE7BZ,EAQP,SAASU,IAER,OADAH,GAAK,EACAJ,GAAOI,EAAId,EAAKO,KACb,CACNa,MAAQ,GAIH,CACNC,OAFDT,GAAK,GAEUZ,EAAKE,OAAUW,EAAMb,EAAKK,IAAML,EAAKG,IACnDiB,MAAQ,GAWV,SAASF,EAAKG,GAEb,OADAX,GAAM,EACDK,UAAUC,OACP,CACNK,MAASA,EACTD,MAAQ,GAGH,CACNA,MAAQ,GAUV,SAASD,IACR,OAAOV,EAAgBT,KC/FzBsB,EALe3C"}